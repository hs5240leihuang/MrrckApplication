<?xml version="1.0" encoding="utf-8"?>
<resources>

    <attr name="themeBackgroundColor_white" format="reference" />
    <attr name="themeBackgroundColor_gray" format="reference" />
    <attr name="themeStatusColor" format="reference" />

    <declare-styleable name="SwipyRefreshLayout">
        <attr name="direction">
            <enum name="top" value="0" />
            <enum name="bottom" value="1" />
            <enum name="both" value="2" />
        </attr>
    </declare-styleable>
    <declare-styleable name="ScrollableLayout">
        <attr name="scrollable_maxScroll" format="dimension" />
        <attr name="scrollable_scrollerFlywheel" format="boolean" />
        <attr name="scrollable_considerIdleMillis" format="integer" />
        <attr name="scrollable_defaultCloseUp" format="boolean" />
        <attr name="scrollable_friction" format="float" />
        <attr name="scrollable_closeUpAnimationMillis" format="integer" />
        <attr name="scrollable_closeUpAnimatorInterpolator" format="reference" />
    </declare-styleable>
    <declare-styleable name="CircleImageView">
        <attr name="border_width" format="dimension" />
        <attr name="border_color" format="color" />
        <attr name="border_overlay" format="boolean" />
    </declare-styleable>
    <declare-styleable name="StickyScrollView">
        <attr name="stuckShadowHeight" format="dimension" />
        <attr name="stuckShadowDrawable" format="reference" />
    </declare-styleable>
    <declare-styleable name="RowItem">
        <attr name="rowNameTxt" format="string|reference" />
        <attr name="rowNameTxtSize" format="dimension|reference" />
        <attr name="rowNameTxtColor" format="reference" />
        <attr name="rowNameTxtPadding" format="dimension" />
    </declare-styleable>
    <declare-styleable name="CirclePageIndicator">
        <attr name="indicator_spacing" format="dimension" />
        <attr name="indicator_type" format="enum">
            <enum name="circle" value="0" />
            <enum name="fraction" value="1" />
        </attr>
    </declare-styleable>
    <declare-styleable name="DragTopLayout">

        <!-- Set the collapse panel offset -->
        <attr name="dtlCollapseOffset" format="dimension" />

        <!-- Set enable drag over.The default value is true. -->
        <attr name="dtlOverDrag" format="boolean" />

        <!-- Open the top view after the drag layout is created. The default value is false. -->
        <attr name="dtlOpen" format="boolean" />

        <!-- The id of the top view (which will be dragged) -->
        <attr name="dtlTopView" format="reference" />

        <!-- The content view which will be dragged together with "dtlTopView" -->
        <attr name="dtlDragContentView" format="reference" />

        <!-- True the top view can be dragged -->
        <attr name="dtlCaptureTop" format="boolean" />
    </declare-styleable>
    <declare-styleable name="TopTitle">
        <attr name="left_res_title" format="reference" />
        <attr name="center_txt_title" format="string" />
        <attr name="center_txt_title_color" format="color" />
        <attr name="right_txt_title" format="string" />
        <attr name="right_txt_title_color" format="color" />
        <attr name="right_res_title" format="reference" />
        <attr name="linear_txt_title" format="string" />
        <attr name="linear_res_title" format="reference" />
    </declare-styleable>
    <declare-styleable name="JazzyViewPager">
        <attr name="style">
            <enum name="standard" value="0" />
            <enum name="tablet" value="1" />
            <enum name="cubein" value="2" />
            <enum name="cubeout" value="3" />
            <enum name="flipvertical" value="4" />
            <enum name="fliphorizontal" value="5" />
            <enum name="stack" value="6" />
            <enum name="zoomin" value="7" />
            <enum name="zoomout" value="8" />
            <enum name="rotateup" value="9" />
            <enum name="rotatedown" value="10" />
            <enum name="accordion" value="11" />
        </attr>
        <attr name="fadeEnabled" format="boolean" />
        <attr name="outlineEnabled" format="boolean" />
        <attr name="outlineColor" format="color|reference" />
    </declare-styleable>
    <declare-styleable name="roundedimageview">
        <attr name="border_inside_thickness" format="dimension" />
        <attr name="border_outside_thickness" format="dimension" />
        <attr name="border_inside_color" format="color" />
        <attr name="border_outside_color" format="color"></attr>
    </declare-styleable>
    <declare-styleable name="CircleProgressBar">
        <attr name="max" format="integer" /> <!-- 进度条最大值 -->
        <attr name="fill" format="boolean" /> <!-- 是否填充圆形区域 -->
        <attr name="Paint_Width" format="integer" /> <!-- 画笔宽度，填充模式下无效，会被重置为0 -->
        <attr name="Paint_Color" format="integer" /> <!-- 画笔颜色 -->
        <attr name="Inside_Interval" format="integer" /> <!-- 圆形区域向里缩进的距离 -->
    </declare-styleable>
    <declare-styleable name="CustomAttributes">

        <!-- Color of ripple animation -->
        <attr name="rippleColor" format="color|reference" />
        <!-- Speed of ripple animation -->
        <attr name="rippleSpeed" format="float" />
        <!-- indicate if the slider must show number indicator -->
        <attr name="showNumberIndicator" format="boolean" />
        <!-- in progress view indicate max value of progress -->
        <attr name="min" format="integer" />
        <!-- in progress view indicate value of progress -->
        <attr name="value" format="integer" />
        <!-- in progress view indicate value of progress -->
        <attr name="progress" format="integer" />
        <attr name="ringWidth" format="dimension" />
        <!-- in switche's view indicate state of view -->
        <attr name="check" format="boolean" />
        <attr name="checkBoxSize" format="dimension" />
        <attr name="thumbSize" format="dimension" />
        <!-- in float button indicate icon resource -->
        <attr name="iconDrawable" format="integer" />
        <!-- in button whitch contains drawable indicate icon resource -->
        <attr name="iconSize" format="dimension" />
        <!-- in float button indicate if must start with animation -->
        <attr name="animate" format="boolean" />
        <!-- set the border of the ripple frame -->
        <attr name="rippleBorderRadius" format="float" />
        <!-- if true, delays calls to OnClickListeners until ripple effect ends -->
        <attr name="clickAfterRipple" format="boolean" />
    </declare-styleable>
    <declare-styleable name="ChatPlayBtn">
        <attr name="left" format="boolean" />
    </declare-styleable>
    <declare-styleable name="roundCorner">
        <attr name="roundCornerSize" format="dimension" />
    </declare-styleable>
    <declare-styleable name="TileButton">
        <attr name="maxRotateDegree" format="integer" />
        <attr name="maxDepth" format="integer" />
    </declare-styleable>
    <declare-styleable name="TasksCompletedView">
        <attr name="radius" format="dimension" />
        <attr name="strokeWidth" format="dimension" />
        <attr name="circleColor" format="color" />
        <attr name="ringColor" format="color" />
    </declare-styleable>
    <declare-styleable name="PullToRefresh">

        <!-- A drawable to use as the background of the Refreshable View -->
        <attr name="ptrRefreshableViewBackground" format="reference|color" />

        <!-- A drawable to use as the background of the Header and Footer Loading Views -->
        <attr name="ptrHeaderBackground" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views -->
        <attr name="ptrHeaderTextColor" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views Sub Header -->
        <attr name="ptrHeaderSubTextColor" format="reference|color" />

        <!-- Mode of Pull-to-Refresh that should be used -->
        <attr name="ptrMode">
            <flag name="disabled" value="0x0" />
            <flag name="pullFromStart" value="0x1" />
            <flag name="pullFromEnd" value="0x2" />
            <flag name="both" value="0x3" />
            <flag name="manualOnly" value="0x4" />

            <!-- These last two are depreacted -->
            <flag name="pullDownFromTop" value="0x1" />
            <flag name="pullUpFromBottom" value="0x2" />
        </attr>

        <!-- Whether the Indicator overlay(s) should be used -->
        <attr name="ptrShowIndicator" format="reference|boolean" />

        <!-- Drawable to use as Loading Indicator. Changes both Header and Footer. -->
        <attr name="ptrDrawable" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Header View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableStart" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Footer View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableEnd" format="reference" />

        <!-- Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. -->
        <attr name="ptrOverScroll" format="reference|boolean" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views -->
        <attr name="ptrHeaderTextAppearance" format="reference" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header -->
        <attr name="ptrSubHeaderTextAppearance" format="reference" />

        <!-- Style of Animation should be used displayed when pulling. -->
        <attr name="ptrAnimationStyle">
            <flag name="rotate" value="0x0" />
            <flag name="flip" value="0x1" />
        </attr>

        <!-- Whether the user can scroll while the View is Refreshing -->
        <attr name="ptrScrollingWhileRefreshingEnabled" format="reference|boolean" />

        <!--
        	Whether PullToRefreshListView has it's extras enabled. This allows the user to be 
        	able to scroll while refreshing, and behaves better. It acheives this by adding
        	Header and/or Footer Views to the ListView.
        -->
        <attr name="ptrListViewExtrasEnabled" format="reference|boolean" />

        <!--
        	Whether the Drawable should be continually rotated as you pull. This only
        	takes effect when using the 'Rotate' Animation Style.
        -->
        <attr name="ptrRotateDrawableWhilePulling" format="reference|boolean" />

        <!-- BELOW HERE ARE DEPRECEATED. DO NOT USE. -->
        <attr name="ptrAdapterViewBackground" format="reference|color" />
        <attr name="ptrDrawableTop" format="reference" />
        <attr name="ptrDrawableBottom" format="reference" />
    </declare-styleable>
    <declare-styleable name="GenericDraweeHierarchy">

        <!-- Fade duration in milliseconds. -->
        <attr name="fadeDuration" format="integer" />

        <!-- Aspect ratio (width / height) of the view, not necessarily of the images. -->
        <attr name="viewAspectRatio" format="float" />

        <!--
    Image branches -
    Scale-type values must match those in GenericDraweeHierarchyInflater.getScaleTypeFromXml.
    (GenericDraweeHierarchyInflater.java).
    For drawables that should not be scaled, such as those with the android:tileMode
    attribute set, use the value 'none'.
        -->


        <!-- A drawable or color to be be used as a placeholder. -->
        <attr name="placeholderImage" format="reference" />
        <!-- Scale type of the placeholder image. Ignored if placeholderImage is not specified. -->
        <attr name="placeholderImageScaleType">
            <enum name="none" value="-1" />
            <enum name="fitXY" value="0" />
            <enum name="fitStart" value="1" />
            <enum name="fitCenter" value="2" />
            <enum name="fitEnd" value="3" />
            <enum name="center" value="4" />
            <enum name="centerInside" value="5" />
            <enum name="centerCrop" value="6" />
            <enum name="focusCrop" value="7" />
        </attr>

        <!-- A drawable to be be used as a retry image. -->
        <attr name="retryImage" format="reference" />
        <!-- Scale type of the retry image. Ignored if retryImage is not specified. -->
        <attr name="retryImageScaleType">
            <enum name="none" value="-1" />
            <enum name="fitXY" value="0" />
            <enum name="fitStart" value="1" />
            <enum name="fitCenter" value="2" />
            <enum name="fitEnd" value="3" />
            <enum name="center" value="4" />
            <enum name="centerInside" value="5" />
            <enum name="centerCrop" value="6" />
            <enum name="focusCrop" value="7" />
        </attr>

        <!-- A drawable to be be used as a failure image. -->
        <attr name="failureImage" format="reference" />
        <!-- Scale type of the failure image. Ignored if failureImage is not specified. -->
        <attr name="failureImageScaleType">
            <enum name="none" value="-1" />
            <enum name="fitXY" value="0" />
            <enum name="fitStart" value="1" />
            <enum name="fitCenter" value="2" />
            <enum name="fitEnd" value="3" />
            <enum name="center" value="4" />
            <enum name="centerInside" value="5" />
            <enum name="centerCrop" value="6" />
            <enum name="focusCrop" value="7" />
        </attr>

        <!-- A drawable to be be used as a progress bar. -->
        <attr name="progressBarImage" format="reference" />
        <!-- Scale type of the progress bar. Ignored if progressBarImage is not specified. -->
        <attr name="progressBarImageScaleType">
            <enum name="none" value="-1" />
            <enum name="fitXY" value="0" />
            <enum name="fitStart" value="1" />
            <enum name="fitCenter" value="2" />
            <enum name="fitEnd" value="3" />
            <enum name="center" value="4" />
            <enum name="centerInside" value="5" />
            <enum name="centerCrop" value="6" />
            <enum name="focusCrop" value="7" />
        </attr>
        <!-- Progress bar Auto Rotate interval in milliseconds -->
        <attr name="progressBarAutoRotateInterval" format="integer" />

        <!-- Scale type of the actual image. -->
        <attr name="actualImageScaleType">
            <enum name="none" value="-1" />
            <enum name="fitXY" value="0" />
            <enum name="fitStart" value="1" />
            <enum name="fitCenter" value="2" />
            <enum name="fitEnd" value="3" />
            <enum name="center" value="4" />
            <enum name="centerInside" value="5" />
            <enum name="centerCrop" value="6" />
            <enum name="focusCrop" value="7" />
        </attr>

        <!-- A drawable or color to be used as a background. -->
        <attr name="backgroundImage" format="reference" />

        <!-- A drawable or color to be used as an overlay. -->
        <attr name="overlayImage" format="reference" />

        <!-- A drawable or color to be used as a pressed-state-overlay -->
        <attr name="pressedStateOverlayImage" format="reference" />

        <!--
    Rounding params -
    Declares attributes for rounding shape, mode and border.
        -->


        <!-- Round as circle. -->
        <attr name="roundAsCircle" format="boolean" />
        <!-- Rounded corner radius. Ignored if roundAsCircle is used. -->
        <attr name="roundedCornerRadius" format="dimension" />
        <!-- Round the top-left corner. Ignored if roundAsCircle is used. -->
        <attr name="roundTopLeft" format="boolean" />
        <!-- Round the top-right corner. Ignored if roundAsCircle is used. -->
        <attr name="roundTopRight" format="boolean" />
        <!-- Round the bottom-right corner. Ignored if roundAsCircle is used. -->
        <attr name="roundBottomRight" format="boolean" />
        <!-- Round the bottom-left corner. Ignored if roundAsCircle is used. -->
        <attr name="roundBottomLeft" format="boolean" />
        <!-- Round by overlying color. -->
        <attr name="roundWithOverlayColor" format="color" />
        <!-- Rounding border width -->
        <attr name="roundingBorderWidth" format="dimension" />
        <!-- Rounding border color -->
        <attr name="roundingBorderColor" format="color" />
        <!-- Rounding border padding -->
        <attr name="roundingBorderPadding" format="dimension" />
    </declare-styleable>
    <declare-styleable name="SimpleDraweeView">

        <!-- An image uri . -->
        <attr name="actualImageUri" format="string" />
    </declare-styleable>
    <declare-styleable name="RoundProgressBar">
        <attr name="roundColor" format="color" />
        <attr name="roundProgressColor" format="color" />
        <attr name="roundWidth" format="dimension"></attr>
        <attr name="textColor" format="color" />
        <attr name="textSize" format="dimension" />
        <attr name="prostyle">
            <enum name="STROKE" value="0"></enum>
            <enum name="FILL" value="1"></enum>
        </attr>
    </declare-styleable>
    <declare-styleable name="swipelistviewstyle">
        <attr name="right_width" format="dimension"></attr>
    </declare-styleable>

</resources>